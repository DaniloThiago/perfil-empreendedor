let React = require('react');
let mui = require('material-ui');
let ThemeManager = new mui.Styles.ThemeManager();
let RadioButtonGroup = mui.RadioButtonGroup;
let RadioButton = mui.RadioButton;
let CardHeader = mui.CardReader;
let CardText = mui.CardText;
let CardMedia = mui.CardMedia;
let CardTitle = mui.CardTitle;
let CardActions = mui.CardActions;
let Card = mui.Card;
let Avatar = mui.Avater;
let List = mui.List;
let ListItem = mui.ListItem;
let ListDivider = mui.ListDivider;
let FlatButton = mui.FlatButton;
let Colors = mui.Styles.Colors;
let AppCanvas = mui.AppCanvas;
let Paper = mui.Paper;
let Table = mui.Table;
let TableHeader = mui.TableHeader;
let TableHeaderColumn = mui.TableHeaderColumn;
let TableRow = mui.TableRow;
let TableRowColumn = mui.TableRowColumn;
let TableBody = mui.TableBody;
let TableFooter = mui.TableFooter;

let BarChart = require("react-chartjs").Bar;

let questoes = require('./questoes');
let comp_mask = require('./competencias_mask');

let PerfilEmpreendedor = React.createClass({
  childContextTypes: {
    muiTheme: React.PropTypes.object
  },

  getChildContext() {
    return {
      muiTheme: ThemeManager.getCurrentTheme()
    };
  },

  componentWillMount() {
    ThemeManager.setPalette({
      accent1Color: Colors.deepOrange500
    });
  },

  onFinalizeClick: function(){

    let value;
    let qIndex;
    let factor = 0;

    for(var m in comp_mask.fatMask){
      qIndex = comp_mask.fatMask[m];

      value = Math.sign(qIndex)*(document.questionario["questao_"+Math.abs(qIndex)].value||0);

      factor += value;
    }

    factor = comp_mask.correcao(factor);

    for(var competencia in comp_mask.competencias){
      comp_mask.competencias[competencia].value = 0;
      for(var m in comp_mask.competencias[competencia].mask){
        qIndex = comp_mask.competencias[competencia].mask[m];

        value = Math.sign(qIndex)*(document.questionario["questao_"+Math.abs(qIndex)].value||0);

        comp_mask.competencias[competencia].value += value;
      }

      comp_mask.competencias[competencia].value += 6;
      comp_mask.competencias[competencia].value -= factor;
      comp_mask.competencias[competencia].value *= 100/25;
    }

    React.render(<Relatorio competencias={comp_mask.competencias}/>, document.body);

  },

  render: function() {
    return (
      <AppCanvas>
      <Card>
      <CardMedia overlay={
        <CardTitle
          title="Perfil do Empreendedor"
          subtitle="Qual o seu perfil de empreendedor? Descubra agora mesmo."/>
      }>
        <img src="http://lorempixel.com/600/337/business/"/>
      </CardMedia>
      <Paper style={{margin: '5vw', padding: '5vw'}}>
        <H3> Apresentação </H3>
        <p> Esta ferramenta visa realizar uma análise do seu perfil empreendedor através de questionamentos, resultando em um autoconhecimento de sua vocação empreendedora, seja empregado ou dono do próprio negócio.</p>
      </Paper>

      <Paper style={{margin: '5vw', padding: '5vw'}}>
        <H3> Instruções </H3>
        <p>O principal objetivo deste questionário, é ajudá-lo a intensificar o seu autoconhecimento.  Não há respostas certas ou erradas. Mas elas, em seu conjunto apontam tendências que podem contribuir para seu aperfeiçoamento como pessoa e profissional. Ninguém é polivalente em todos os campos do conhecimento e do trabalho.</p>
        <p>Responda por isso as perguntas da forma crítica e sincera.</p>
        <p>Leia, portanto, as 55 questões e faça a escolha da opção de 1 a 5 que mais se aplica a você de acordo com os conceitos da tabela abaixo, e marque um “X” no número correspondente à pontuação escolhida, nas colunas à direita de cada uma das afirmações.</p>
<ol>
<li>Nunca</li>
<li>Raramente</li>
<li>Algumas vezes</li>
<li>Geralmente</li>
<li>Sempre</li>
</ol>
        <p>Mesmo que as afirmativas pareçam similares, elas não são réplicas uma das outras, pois procuram sempre focalizar algum aspecto diferente das demais.</p>
      </Paper>

      <Paper style={{margin: '5vw', padding: '5vw'}}>
      <H3>Questionário</H3>
      <form name={"questionario"}>
      <List>
      {
        this.props.questoes.map(function(questao) {
          return ([<Pergunta questao={questao}/>,
          <ListDivider/>])
        })
      }
      </List>
      <FlatButton label="Finalizar" onClick={this.onFinalizeClick}/>
      </form>
      </Paper>
      </Card>

      </AppCanvas>
    )}
});

let H3= React.createClass({
  render: function() {
    return <h3 style={{fontSize: '20px',
        lineHeight: '28px',
        paddingBottom: '22px',
        letterSpacing: 0,
        fontWeight: 500,
        boxSizing: 'border-box'}}>{this.props.children}</h3>
  }
});

let Pergunta = React.createClass({
  render: function() {
    return <ListItem 
      leftIcon={<span>{this.props.questao.id}</span>}
      disabled='true' >
        <p>{this.props.questao.pergunta}</p>
        <RadioButtonGroup name={"questao_"+this.props.questao.id}>
        {["Nunca", "Raramente", "Algumas vezes", "Geralmente", "Sempre"].map(function(label, index) {
          return <RadioButton value={index + 1}
          label={label}/>
        })}
        </RadioButtonGroup>
        </ListItem>
  }
});

let Relatorio = React.createClass({
  childContextTypes: {
    muiTheme: React.PropTypes.object
  },

  getChildContext() {
    return {
      muiTheme: ThemeManager.getCurrentTheme()
    };
  },

  componentWillMount() {
    ThemeManager.setPalette({
      accent1Color: Colors.deepOrange500
    });
  },

  subTotal1: 0,
  subTotal2: 0,
  subTotal3: 0,
  chartData1: {
    labels: [],
    datasets: [
      { 
        data:[]
      }
    ]
  },

  render: function() {
    let _this = this;
    return (
        <AppCanvas>
          <Card>
            <Paper style={{margin: '5vw', padding: '5vw'}}>
              <h3>TESTE DO PERFIL EMPREENDEDOR DE {this.props.username||'NOME'}</h3>
              <hr />
              <table style={{width:600}}>
                <thead>
                  <tr>
                    <th>Características empreendedoras pessoais</th>
                    <th>OBITIDA</th>
                    <th>MÁXIMA</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <th>Realização</th>
                  </tr>
                  {
                    this.props.competencias.slice(0,5).map(function(data){
                      _this.subTotal1 += data.value;
                      _this.chartData1.labels.push(data.label);
                      _this.chartData1.datasets[0].data.push(data.value);
                      return (
                        <tr>
                          <td>{data.label}</td>
                          <td style={{'text-align':'center'}}>{data.value}</td>
                          <td style={{'text-align':'center'}}>100</td>
                        </tr>
                      )
                    })
                  }
                  <tr>
                    <th style={{'text-align':'left'}}>Sub Total I</th>
                    <th>{this.subTotal1}</th>
                    <th>500</th>
                  </tr>
                  <tr></tr>
                  <tr>
                    <th>Planejamento</th>
                  </tr>
                  {
                    this.props.competencias.slice(5,8).map(function(data){
                      _this.subTotal2 += data.value;
                      _this.chartData1.labels.push(data.label);
                      _this.chartData1.datasets[0].data.push(data.value);
                      return (
                        <tr>
                          <td>{data.label}</td>
                          <td style={{'text-align':'center'}}>{data.value}</td>
                          <td style={{'text-align':'center'}}>100</td>
                        </tr>
                      )
                    })
                  }
                  <tr>
                    <th style={{'text-align':'left'}}>Sub Total II</th>
                    <th>{this.subTotal2}</th>
                    <th>300</th>
                  </tr>
                  <tr></tr>
                  <tr>
                    <th>Poder</th>
                  </tr>
                  {
                    this.props.competencias.slice(8,10).map(function(data){
                      _this.subTotal3 += data.value;
                      _this.chartData1.labels.push(data.label);
                      _this.chartData1.datasets[0].data.push(data.value+50);
                      return (
                        <tr>
                          <td>{data.label}</td>
                          <td style={{'text-align':'center'}}>{data.value}</td>
                          <td style={{'text-align':'center'}}>100</td>
                        </tr>
                      )
                    })
                  }
                  <tr>
                    <th style={{'text-align':'left'}}>Sub Total III</th>
                    <th>{this.subTotal3}</th>
                    <th>200</th>
                  </tr>
                                                                              
                </tbody>

              </table>
            </Paper>
            <Paper style={{margin: '5vw', padding: '5vw'}}>
              <h3>GRÁFICO - PONTUAÇÃO</h3>
              <hr />
              <BarChart 
              data={this.chartData1}
              style={{width:'50vw', height:600}}
              options={{
                barValueSpacing : 50,
              }}/>
            </Paper>
          </Card>
        </AppCanvas>
    );
  }
});

React.render(<PerfilEmpreendedor questoes={questoes} />, document.body);
React.render(<Relatorio competencias={comp_mask.competencias} />, document.body);

